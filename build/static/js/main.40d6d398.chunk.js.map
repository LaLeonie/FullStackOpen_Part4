{"version":3,"sources":["components/BlogForm.js","components/Post.js","components/BlogPosts.js","components/Notification.js","components/Filter.js","components/FilterComponent.js","services/blogposts.js","App.js","index.js"],"names":["BlogForm","props","onSubmit","onSubmitChange","value","authorValue","onChange","onAuthorChange","titleValue","onTitleChange","urlValue","onUrlChange","type","onClick","onClear","Post","author","title","url","likes","id","onLikeClick","onDeleteClick","href","BlogPosts","list","map","p","key","Notification","notificationObject","messageStyle","fontSize","borderStyle","borderRadius","padding","marginBottom","success","color","background","fail","style","message","Filter","newFilter","FilterComponent","category","handleCategoryChange","onFilterInputChange","name","checked","baseUrl","console","log","axios","get","then","response","data","newObject","post","put","delete","App","useState","blogPosts","setBlogPosts","newAuthor","setNewAuthor","newTitle","setNewTitle","newUrl","setNewUrl","setLikes","newNotification","setNotification","setNewFilter","filterCategory","setFilterCategory","useEffect","blogpostsServices","catch","error","resetInputFields","displayMessage","setTimeout","postsToShow","filter","toLowerCase","includes","integer","parseInt","filterByCategory","className","event","target","preventDefault","oldPost","newPost","newBlogPost","Math","floor","random","equalPost","length","window","confirm","returnedBlogPost","concat","postToUpdate","find","updatedPost","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40d6d398.chunk.js","sourcesContent":["import React from \"react\";\n\nconst BlogForm = (props) => (\n  <form onSubmit={props.onSubmitChange}>\n    <p>\n      author:\n      <input value={props.authorValue} onChange={props.onAuthorChange} />\n    </p>\n    <p>\n      title: <input value={props.titleValue} onChange={props.onTitleChange} />\n    </p>\n    <p>\n      url: <input value={props.urlValue} onChange={props.onUrlChange} />\n    </p>\n    <p>\n      <button type=\"submit\">ADD</button>\n      <button onClick={props.onClear} type=\"reset\">\n        CLEAR\n      </button>\n    </p>\n  </form>\n);\n\nexport default BlogForm;\n","import React from \"react\";\n\nconst Post = ({\n  author,\n  title,\n  url,\n  likes,\n  id,\n  onLikeClick,\n  onDeleteClick,\n}) => {\n  return (\n    <tr>\n      <td>{author}</td>\n      <td>{title}</td>\n      <td>\n        <a href={url}>Link to {title}</a>\n      </td>\n      <td>{likes}</td>\n      <td>\n        <button onClick={() => onLikeClick(id)}>LIKE</button>\n      </td>\n      <td>\n        <button onClick={() => onDeleteClick(id, title)}>DELETE</button>\n      </td>\n    </tr>\n  );\n};\n\nexport default Post;\n","import React from \"react\";\nimport Post from \"./Post\";\n\nconst BlogPosts = (props) => {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Author</th>\n          <th>Title</th>\n          <th>Url</th>\n          <th>Likes</th>\n          <th>Like Button</th>\n          <th>Delete Button</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.list.map((p) => (\n          <Post\n            key={p.id}\n            author={p.author}\n            title={p.title}\n            url={p.url}\n            likes={p.likes}\n            id={p.id}\n            onLikeClick={props.onLikeClick}\n            onDeleteClick={props.onDeleteClick}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default BlogPosts;\n","import React from \"react\";\n\nconst Notification = ({ notificationObject }) => {\n  const messageStyle = {\n    fontSize: \"20px\",\n    borderStyle: \"solid\",\n    borderRadius: \"5px\",\n    padding: \"10px\",\n    marginBottom: \"10px\",\n  };\n\n  const success = {\n    color: \"#429745\",\n    background: \"#a9daab\",\n    ...messageStyle,\n  };\n\n  const fail = {\n    color: \"#a34847\",\n    background: \"#d49e9d\",\n    ...messageStyle,\n  };\n\n  if (notificationObject === null) {\n    return null;\n  }\n  return (\n    <div style={notificationObject.type === \"success\" ? success : fail}>\n      {notificationObject.message}\n    </div>\n  );\n};\n\nexport default Notification;\n","import React from \"react\";\n\nconst Filter = (props) => (\n  <p>\n    Filter entries by {props.type}:\n    <input value={props.newFilter} onChange={props.onChange} />\n  </p>\n);\n\nexport default Filter;\n","import React from \"react\";\nimport Filter from \"./Filter\";\n\nconst FilterComponent = ({\n  category,\n  handleCategoryChange,\n  newFilter,\n  onFilterInputChange,\n}) => (\n  <div>\n    <form>\n      <label>\n        <input\n          type=\"radio\"\n          name=\"categorie\"\n          value=\"author\"\n          checked={category === \"author\"}\n          onChange={handleCategoryChange}\n        />\n        author\n      </label>\n      <label>\n        <input\n          type=\"radio\"\n          name=\"categorie\"\n          value=\"title\"\n          checked={category === \"title\"}\n          onChange={handleCategoryChange}\n        />\n        title\n      </label>\n      <label>\n        <input\n          type=\"radio\"\n          name=\"categorie\"\n          value=\"likes\"\n          checked={category === \"likes\"}\n          onChange={handleCategoryChange}\n        />\n        likes\n      </label>\n    </form>\n    <Filter\n      type={category}\n      newFilter={newFilter}\n      onChange={onFilterInputChange}\n    />\n  </div>\n);\n\nexport default FilterComponent;\n","import axios from \"axios\";\n\nconst baseUrl = \"/blogPosts\";\n\nconst getAll = () => {\n  console.log(\"get all at\", baseUrl);\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nconst deletePost = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((response) => response.data);\n};\n\nexport default { getAll, create, update, deletePost };\n","import React, { useState, useEffect } from \"react\";\nimport BlogForm from \"./components/BlogForm\";\nimport BlogPosts from \"./components/BlogPosts\";\nimport Notification from \"./components/Notification\";\nimport FilterComponent from \"./components/FilterComponent\";\nimport blogpostsServices from \"./services/blogposts\";\nimport \"./App.css\";\n\nfunction App() {\n  const [blogPosts, setBlogPosts] = useState([]);\n  const [newAuthor, setNewAuthor] = useState(\"\");\n  const [newTitle, setNewTitle] = useState(\"\");\n  const [newUrl, setNewUrl] = useState(\"\");\n  const [likes, setLikes] = useState(0);\n  const [newNotification, setNotification] = useState(null);\n  const [newFilter, setNewFilter] = useState(\"\");\n  const [filterCategory, setFilterCategory] = useState(\"author\");\n\n  useEffect(() => {\n    blogpostsServices\n      .getAll()\n      .then((data) => setBlogPosts(data))\n      .catch((error) => console.log(\"there was an error\", error));\n  }, []);\n\n  const createRandomId = () => {\n    return Math.floor((1 + Math.random()) * 0x100);\n  };\n\n  const resetInputFields = () => {\n    setNewAuthor(\"\");\n    setNewTitle(\"\");\n    setNewUrl(\"\");\n  };\n\n  const resetAllInputs = (event) => {\n    console.log(\"reset is pressed\");\n    event.preventDefault();\n    resetInputFields();\n  };\n\n  const displayMessage = (message, type) => {\n    setNotification({ message, type });\n    setTimeout(() => {\n      setNotification(null);\n    }, 2000);\n  };\n\n  const updatePost = (oldPost, newPost) => {\n    const answer = window.confirm(\n      `${oldPost.title} already exists. Do you want to update this entry?`\n    );\n    if (answer) {\n      blogpostsServices.update(oldPost.id, newPost).then((response) => {\n        setBlogPosts(\n          blogPosts.map((p) => (p.id !== oldPost.id ? p : response))\n        );\n        resetInputFields();\n        displayMessage(`Entry for ${newPost.title} was changed`, \"success\");\n      });\n    } else {\n      resetInputFields();\n    }\n  };\n\n  const addBlogPost = (event) => {\n    event.preventDefault();\n    const newBlogPost = {\n      author: newAuthor,\n      title: newTitle,\n      url: newUrl,\n      likes: likes,\n      id: createRandomId(),\n    };\n\n    const equalPost = blogPosts.filter(\n      (p) => p.title.toLowerCase() === newBlogPost.title.toLowerCase()\n    );\n\n    equalPost.length > 0\n      ? updatePost(equalPost[0], newBlogPost)\n      : blogpostsServices\n          .create(newBlogPost)\n          .then((returnedBlogPost) => {\n            setBlogPosts(blogPosts.concat(returnedBlogPost));\n            resetInputFields();\n            displayMessage(\n              `${returnedBlogPost.title} has been added`,\n              \"success\"\n            );\n          })\n          .catch((error) => {\n            resetInputFields();\n            console.log(\"this is the error\", error);\n          });\n  };\n\n  const onLikeClick = (id) => {\n    const postToUpdate = blogPosts.find((p) => p.id === id);\n    const updatedPost = {\n      likes: setLikes(postToUpdate.likes++),\n      ...postToUpdate,\n    };\n\n    blogpostsServices\n      .update(id, updatedPost)\n      .then((data) =>\n        setBlogPosts(blogPosts.map((p) => (p.id === id ? data : p)))\n      );\n  };\n\n  const onDeleteClick = (id, title) => {\n    const answer = window.confirm(`Delete ${title}?`);\n    if (answer) {\n      blogpostsServices\n        .deletePost(id)\n        .then((data) => {\n          setBlogPosts(blogPosts.filter((p) => p.id !== id));\n          displayMessage(`${title} has been deleted`, \"success\");\n        })\n        .catch((error) =>\n          displayMessage(`${title} has already been deleted`, \"fail\")\n        );\n    } else {\n      setBlogPosts(blogPosts);\n    }\n  };\n\n  const handleAuthorChange = (event) => {\n    setNewAuthor(event.target.value);\n  };\n\n  const handleTitleChange = (event) => {\n    setNewTitle(event.target.value);\n  };\n\n  const handleUrlChange = (event) => {\n    setNewUrl(event.target.value);\n  };\n\n  const handleCategoryChange = (event) => setFilterCategory(event.target.value);\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value);\n  };\n\n  const filterByCategory = (type, list, filter) => {\n    if (type === \"author\") {\n      return list.filter((p) =>\n        p.author.toLowerCase().includes(filter.toLowerCase())\n      );\n    } else if (type === \"title\") {\n      return list.filter((p) =>\n        p.title.toLowerCase().includes(filter.toLowerCase())\n      );\n    } else if (type === \"likes\") {\n      const integer = parseInt(filter);\n      if (integer) {\n        return list.filter((p) => p.likes >= integer);\n      } else {\n        console.log(\"please enter a number\");\n      }\n    }\n  };\n\n  const postsToShow =\n    newFilter !== \"\"\n      ? filterByCategory(filterCategory, blogPosts, newFilter)\n      : blogPosts;\n\n  return (\n    <div className=\"App\">\n      <h1>Blog List</h1>\n      <Notification notificationObject={newNotification} />\n      <FilterComponent\n        category={filterCategory}\n        handleCategoryChange={handleCategoryChange}\n        newFilter={newFilter}\n        onFilterInputChange={handleFilterChange}\n      />\n      <h2>Add a new blog entry</h2>\n      <BlogForm\n        onSubmitChange={addBlogPost}\n        onClear={resetAllInputs}\n        onAuthorChange={handleAuthorChange}\n        onTitleChange={handleTitleChange}\n        onUrlChange={handleUrlChange}\n        authorValue={newAuthor}\n        titleValue={newTitle}\n        urlValue={newUrl}\n      />\n      <h2>List of blogs</h2>\n      <BlogPosts\n        list={postsToShow}\n        onLikeClick={onLikeClick}\n        onDeleteClick={onDeleteClick}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}