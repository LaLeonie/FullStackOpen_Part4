{"version":3,"sources":["components/BlogForm.js","components/Togglable.js","components/Post.js","components/BlogPosts.js","components/Notification.js","components/Filter.js","components/FilterComponent.js","components/LoginForm.js","services/blogposts.js","services/login.js","App.js","index.js"],"names":["BlogForm","addPostFunction","useState","newAuthor","setNewAuthor","newTitle","setNewTitle","newUrl","setNewUrl","onSubmit","event","preventDefault","author","title","url","value","onChange","target","type","onClick","Togglable","React","forwardRef","props","ref","visible","setVisible","toggleVisible","hideWhenVisible","display","showWhenVisible","useImperativeHandle","style","buttonLabel","children","displayName","Post","likes","id","onLikeClick","onDeleteClick","href","BlogPosts","list","sort","a","b","map","p","key","Notification","notificationObject","messageStyle","fontSize","borderStyle","borderRadius","padding","marginBottom","success","color","background","fail","message","Filter","name","newFilter","FilterComponent","category","handleCategoryChange","filter","onFilterInputChange","checked","LoginForm","onLoginFunction","username","setUsername","password","setPassword","PropsTypes","func","isRequired","token","getAll","axios","get","then","response","data","create","newObject","config","headers","Authorization","post","update","put","deletePost","delete","setToken","newToken","login","credentials","App","blogPosts","setBlogPosts","setLikes","notification","setNotification","setNewFilter","filterCategory","setFilterCategory","user","setUser","useEffect","blogpostsServices","catch","error","console","log","loggedBlogUserJSON","window","localStorage","getItem","loggedUser","JSON","parse","displayMessage","setTimeout","handleLogin","loginServices","setItem","stringify","handleLogout","removeItem","postsToShow","toLowerCase","includes","integer","parseInt","filterByCategory","blogFormRef","createRef","className","newPostObject","oldPost","newPost","newBlogPost","Math","floor","random","equalPost","length","confirm","returnedBlogPost","concat","current","postToUpdate","find","updatedPost","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3c36875.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nconst BlogForm = ({ addPostFunction }) => {\n  const [newAuthor, setNewAuthor] = useState(\"\");\n  const [newTitle, setNewTitle] = useState(\"\");\n  const [newUrl, setNewUrl] = useState(\"\");\n\n  const handleAuthorChange = (event) => {\n    setNewAuthor(event.target.value);\n  };\n\n  const handleTitleChange = (event) => {\n    setNewTitle(event.target.value);\n  };\n\n  const handleUrlChange = (event) => {\n    setNewUrl(event.target.value);\n  };\n\n  const resetInputFields = () => {\n    setNewAuthor(\"\");\n    setNewTitle(\"\");\n    setNewUrl(\"\");\n  };\n\n  const addBlogPost = (event) => {\n    event.preventDefault();\n    addPostFunction({\n      author: newAuthor,\n      title: newTitle,\n      url: newUrl,\n    });\n  };\n\n  return (\n    <form onSubmit={addBlogPost}>\n      <p>\n        author:\n        <input value={newAuthor} onChange={handleAuthorChange} />\n      </p>\n      <p>\n        title: <input value={newTitle} onChange={handleTitleChange} />\n      </p>\n      <p>\n        url: <input value={newUrl} onChange={handleUrlChange} />\n      </p>\n      <p>\n        <button type=\"submit\">ADD</button>\n        <button onClick={resetInputFields} type=\"reset\">\n          CLEAR\n        </button>\n      </p>\n    </form>\n  );\n};\n\nexport default BlogForm;\n","import React, { useState, useImperativeHandle } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false);\n  const toggleVisible = () => {\n    setVisible(!visible);\n  };\n\n  const hideWhenVisible = { display: visible ? \"none\" : \"\" };\n  const showWhenVisible = { display: visible ? \"\" : \"none\" };\n\n  useImperativeHandle(ref, () => {\n    return { toggleVisible };\n  });\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisible}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={toggleVisible}>cancel</button>\n      </div>\n    </div>\n  );\n});\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired,\n};\n\nTogglable.displayName = \"Togglable\";\n\nexport default Togglable;\n","import React from \"react\";\nimport Togglable from \"./Togglable\";\n\nconst Post = ({\n  author,\n  title,\n  url,\n  likes,\n  id,\n  onLikeClick,\n  onDeleteClick,\n}) => {\n  return (\n    <tr>\n      <td>{title}</td>\n      <td>{author}</td>\n      <td>\n        <a href={url}>Link to {title}</a>\n      </td>\n      <td>{likes}</td>\n      <td>\n        <button onClick={() => onLikeClick(id)}>LIKE</button>\n      </td>\n      <td>\n        <button onClick={() => onDeleteClick(id, title)}>DELETE</button>\n      </td>\n    </tr>\n  );\n};\n\nexport default Post;\n","import React from \"react\";\nimport Post from \"./Post\";\n\nconst BlogPosts = ({ list, onLikeClick, onDeleteClick }) => {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Title</th>\n          <th>Author</th>\n          <th>Url</th>\n          <th>Likes</th>\n          <th>Like Button</th>\n          <th>Delete Button</th>\n        </tr>\n      </thead>\n      <tbody>\n        {list\n          .sort((a, b) => {\n            return b.likes - a.likes;\n          })\n          .map((p) => (\n            <Post\n              key={p.id}\n              author={p.author}\n              title={p.title}\n              url={p.url}\n              likes={p.likes}\n              id={p.id}\n              onLikeClick={onLikeClick}\n              onDeleteClick={onDeleteClick}\n            />\n          ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default BlogPosts;\n","import React from \"react\";\n\nconst Notification = ({ notificationObject }) => {\n  const messageStyle = {\n    fontSize: \"20px\",\n    borderStyle: \"solid\",\n    borderRadius: \"5px\",\n    padding: \"10px\",\n    marginBottom: \"10px\",\n  };\n\n  const success = {\n    color: \"#429745\",\n    background: \"#a9daab\",\n    ...messageStyle,\n  };\n\n  const fail = {\n    color: \"#a34847\",\n    background: \"#d49e9d\",\n    ...messageStyle,\n  };\n\n  if (notificationObject === null) {\n    return null;\n  }\n  return (\n    <div style={notificationObject.type === \"success\" ? success : fail}>\n      {notificationObject.message}\n    </div>\n  );\n};\n\nexport default Notification;\n","import React from \"react\";\n\nconst Filter = (props) => (\n  <p>\n    Filter entries by {props.type}:\n    <input\n      type=\"text\"\n      name=\"filter\"\n      value={props.newFilter}\n      onChange={props.onChange}\n    />\n  </p>\n);\n\nexport default Filter;\n","import React from \"react\";\nimport Filter from \"./Filter\";\nimport Togglable from \"./Togglable\";\n\nconst FilterComponent = ({\n  category,\n  handleCategoryChange,\n  filter,\n  onFilterInputChange,\n}) => (\n  <div>\n    <h2>Filter posts</h2>\n    <Togglable buttonLabel=\"Open filter\">\n      <form>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"categorie\"\n            value=\"author\"\n            checked={category === \"author\"}\n            onChange={handleCategoryChange}\n          />\n          author\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"categorie\"\n            value=\"title\"\n            checked={category === \"title\"}\n            onChange={handleCategoryChange}\n          />\n          title\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"categorie\"\n            value=\"likes\"\n            checked={category === \"likes\"}\n            onChange={handleCategoryChange}\n          />\n          likes\n        </label>\n      </form>\n      <Filter\n        type={category}\n        newFilter={filter}\n        onChange={onFilterInputChange}\n      />\n    </Togglable>\n  </div>\n);\n\nexport default FilterComponent;\n","import React, { useState } from \"react\";\nimport PropsTypes from \"prop-types\";\n\nconst LoginForm = ({ onLoginFunction }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleLogin = (event) => {\n    event.preventDefault();\n    onLoginFunction(username, password);\n  };\n\n  return (\n    <>\n      <h2>log in to application</h2>\n      <form onSubmit={handleLogin}>\n        <p>\n          username:\n          <input\n            type=\"text\"\n            name=\"Username\"\n            value={username}\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </p>\n        <p>\n          password:\n          <input\n            type=\"text\"\n            name=\"Password\"\n            value={password}\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </p>\n        <button type=\"submit\">login</button>\n      </form>\n    </>\n  );\n};\n\nLoginForm.PropsTypes = {\n  onLoginFunction: PropsTypes.func.isRequired,\n};\n\nexport default LoginForm;\n","import axios from \"axios\";\nconst baseUrl = \"/blogPosts\";\n\nlet token = null;\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = async (newObject) => {\n  const config = {\n    headers: { Authorization: token },\n  };\n  const response = await axios.post(baseUrl, newObject, config);\n  return response.data;\n};\n\nconst update = async (id, newObject) => {\n  const response = await axios.put(`${baseUrl}/${id}`, newObject);\n  return response.data;\n};\n\nconst deletePost = async (id) => {\n  const config = {\n    headers: { Authorization: token },\n  };\n  const response = await axios.delete(`${baseUrl}/${id}`, config);\n  return response.data;\n};\n\nexport default { getAll, create, update, deletePost, setToken };\n","import axios from \"axios\";\nconst baseUrl = \"/login\";\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials);\n  return response.data;\n};\n\nexport default { login };\n","import React, { useState, useEffect } from \"react\";\nimport BlogForm from \"./components/BlogForm\";\nimport BlogPosts from \"./components/BlogPosts\";\nimport Notification from \"./components/Notification\";\nimport FilterComponent from \"./components/FilterComponent\";\nimport Togglable from \"./components/Togglable\";\nimport LoginForm from \"./components/LoginForm\";\nimport blogpostsServices from \"./services/blogposts\";\nimport loginServices from \"./services/login\";\nimport \"./App.css\";\n\nfunction App() {\n  const [blogPosts, setBlogPosts] = useState([]);\n  const [likes, setLikes] = useState(0);\n  const [notification, setNotification] = useState(null);\n  const [newFilter, setNewFilter] = useState(\"\");\n  const [filterCategory, setFilterCategory] = useState(\"author\");\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    blogpostsServices\n      .getAll()\n      .then((data) => setBlogPosts(data))\n      .catch((error) => console.log(\"there was an error\", error));\n  }, []);\n\n  const createRandomId = () => {\n    return Math.floor((1 + Math.random()) * 0x100);\n  };\n\n  useEffect(() => {\n    const loggedBlogUserJSON = window.localStorage.getItem(\"loggedBlogUser\");\n    if (loggedBlogUserJSON) {\n      const loggedUser = JSON.parse(loggedBlogUserJSON);\n      setUser(loggedUser);\n      blogpostsServices.setToken(loggedUser.token);\n    }\n  }, []);\n\n  const displayMessage = (message, type) => {\n    setNotification({ message, type });\n    setTimeout(() => {\n      setNotification(null);\n    }, 5000);\n  };\n\n  const updatePost = (oldPost, newPost) => {\n    const answer = window.confirm(\n      `${oldPost.title} already exists. Do you want to update this entry?`\n    );\n    if (answer) {\n      blogpostsServices.update(oldPost.id, newPost).then((response) => {\n        setBlogPosts(\n          blogPosts.map((p) => (p.id !== oldPost.id ? p : response))\n        );\n        // resetInputFields();\n        displayMessage(`Entry for ${newPost.title} was changed`, \"success\");\n      });\n    } else {\n      // resetInputFields();\n    }\n  };\n\n  const addPost = (newPostObject) => {\n    const newBlogPost = {\n      author: newPostObject.author,\n      title: newPostObject.title,\n      url: newPostObject.url,\n      likes: likes,\n      id: createRandomId(),\n    };\n\n    const equalPost = blogPosts.filter(\n      (p) => p.title.toLowerCase() === newBlogPost.title.toLowerCase()\n    );\n\n    equalPost.length > 0\n      ? updatePost(equalPost[0], newBlogPost)\n      : blogpostsServices\n          .create(newBlogPost)\n          .then((returnedBlogPost) => {\n            setBlogPosts(blogPosts.concat(returnedBlogPost));\n            // resetInputFields();\n            displayMessage(\n              `a new blog \"${returnedBlogPost.title}\" by ${user.username} has been added`,\n              \"success\"\n            );\n          })\n          .catch((error) => {\n            console.log(\"this is the error\", error);\n          });\n    blogFormRef.current.toggleVisible();\n  };\n\n  const onLikeClick = (id) => {\n    const postToUpdate = blogPosts.find((p) => p.id === id);\n    const updatedPost = {\n      likes: setLikes(postToUpdate.likes++),\n      ...postToUpdate,\n    };\n\n    blogpostsServices\n      .update(id, updatedPost)\n      .then((data) =>\n        setBlogPosts(blogPosts.map((p) => (p.id === id ? data : p)))\n      );\n  };\n\n  const onDeleteClick = (id, title) => {\n    const answer = window.confirm(`Delete ${title}?`);\n    if (answer) {\n      blogpostsServices\n        .deletePost(id)\n        .then((data) => {\n          setBlogPosts(blogPosts.filter((p) => p.id !== id));\n          displayMessage(`${title} has been deleted`, \"success\");\n        })\n        .catch((error) =>\n          displayMessage(`${title} has already been deleted`, \"fail\")\n        );\n    } else {\n      setBlogPosts(blogPosts);\n    }\n  };\n\n  const handleLogin = async (username, password) => {\n    try {\n      const user = await loginServices.login({ username, password });\n      setUser(user);\n      blogpostsServices.setToken(user.token);\n      window.localStorage.setItem(\"loggedBlogUser\", JSON.stringify(user));\n    } catch (exception) {\n      displayMessage(\"wrong username or password\", \"fail\");\n    }\n  };\n\n  const handleLogout = async (event) => {\n    window.localStorage.removeItem(\"loggedBlogUser\");\n    setUser(null);\n  };\n\n  const handleCategoryChange = (event) => {\n    setFilterCategory(event.target.value);\n  };\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value);\n  };\n\n  const filterByCategory = (type, list, filter) => {\n    if (type === \"author\") {\n      return list.filter((p) =>\n        p.author.toLowerCase().includes(filter.toLowerCase())\n      );\n    } else if (type === \"title\") {\n      return list.filter((p) =>\n        p.title.toLowerCase().includes(filter.toLowerCase())\n      );\n    } else if (type === \"likes\") {\n      const integer = parseInt(filter);\n      if (integer) {\n        return list.filter((p) => p.likes >= integer);\n      } else {\n        console.log(\"please enter a number\");\n      }\n    }\n  };\n\n  let postsToShow =\n    newFilter !== \"\"\n      ? filterByCategory(filterCategory, blogPosts, newFilter)\n      : blogPosts;\n\n  const blogFormRef = React.createRef();\n\n  return (\n    <div className=\"App\">\n      <h1>Blog List</h1>\n      <Notification notificationObject={notification} />\n      {user === null ? (\n        <Togglable buttonLabel=\"login\">\n          <LoginForm onLoginFunction={handleLogin} />\n        </Togglable>\n      ) : (\n        <>\n          <p>{user.username} logged in</p>\n          <button onClick={handleLogout}>logout</button>\n          <FilterComponent\n            category={filterCategory}\n            handleCategoryChange={handleCategoryChange}\n            filter={newFilter}\n            onFilterInputChange={handleFilterChange}\n          />\n          <h2>Add a new blog entry</h2>\n          <Togglable buttonLabel=\"Add blog\" ref={blogFormRef}>\n            <BlogForm addPostFunction={addPost} />\n          </Togglable>\n          <h2>List of blogs</h2>\n          <BlogPosts\n            list={postsToShow}\n            onLikeClick={onLikeClick}\n            onDeleteClick={onDeleteClick}\n          />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}